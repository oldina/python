import math
import numpy as np
from math import factorial
from os import system
system("cls")
#Задание 1
#Даны значения зарплат из выборки выпускников: 100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150. 
#Посчитать (желательно без использования статистических методов наподобие std, var, mean) среднее арифметическое, 
#среднее квадратичное отклонение, смещенную и несмещенную оценки дисперсий для данной выборки.

# Среднее арифметическое (mean) можно вычислить, суммируя все значения массива и деля их на количество элементов в массиве.

sal = [100, 80, 75, 77, 89, 33, 45, 25, 65,
            17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150]

mean = np.mean(sal)
print("Mean: ", mean)

stddev = np.std(sal)
print("Std deviation: ", stddev)

var = np.var(sal)
print("Variance: ", var)

unbiased_var = np.var(sal, ddof=1)
print("Unbiased variance: ", unbiased_var)
#Задание 2
#В первом ящике находится 8 мячей, из которых 5 - белые. Во втором ящике - 12 мячей, из которых 5 белых. 
# Из первого ящика вытаскивают случайным образом два мяча, из второго - 4. Какова вероятность того, что 3 мяча белые?
def f_comb(n, k):
    return (factorial(n) / (factorial(k) * factorial(n-k)))
ver = f_comb(5, 2)*f_comb(3, 0)/f_comb(8, 2) * f_comb(5, 1)*f_comb(7, 3)/f_comb(12, 4) \
    + f_comb(5, 1)*f_comb(3, 1)/f_comb(8, 2) * f_comb(5, 2)*f_comb(7, 2)/f_comb(12, 4) \
    + f_comb(5, 0)*f_comb(3, 2)/f_comb(8, 2) * \
    f_comb(5, 3)*f_comb(7, 1)/f_comb(12, 4)
print(
    f">>> Вероятность того, что 3 мяча белые = {ver: .5f} -> {ver*100:0.2f}%")
#Задание 3
#На соревновании по биатлону один из трех спортсменов стреляет и попадает в мишень. 
# Вероятность попадания для первого спортсмена равна 0.9, для второго — 0.8, для третьего — 0.6. 
# Найти вероятность того, что выстрел произведен: a). первым спортсменом б). вторым спортсменом в). третьим спортсменом.

p1 = 0.9  # вероятность попадания 1
p2 = 0.8  # вероятность попадания 2
p3 = 0.6  # вероятность попадания 3
PB = 1/3
PA = PB*p1+PB*p2+PB*p3

print(f'<<< Полная вероятность события А Р(А) = {PA:.4f} >>>')

p_1  = PB*p1/PA
p_2 = PB*p2/PA
p_3 = PB*p3/PA
print(f'\n >>> Вероятность того, что выстрел 1-го: {p_1:.4f} -> {p_1 * 100:.2f}%\n'
      f' >>> Вероятность того, что выстрел 2-го: {p_2:.4f} -> {p_2 * 100:.2f}%\n'
      f' >>> Вероятность того, что выстрел 3-го: {p_3:.4f} -> {p_3*100:.2f}%')
#Задание 4
#В университет на факультеты A и B поступило равное количество студентов, а на факультет C студентов поступило столько же, 
# сколько на A и B вместе. Вероятность того, что студент факультета A сдаст первую сессию, равна 0.8. 
# Для студента факультета B эта вероятность равна 0.7, а для студента факультета C - 0.9. Студент сдал первую сессию. 
# Какова вероятность, что он учится: a). на факультете A б). на факультете B в). на факультете C?

a = 0.8
b = 0.7
c = 0.9
f_a = 0.25
f_b = 0.25
f_c = 0.5
PD = f_a*a+f_b*b+f_c*c
print(f'<<< Полная вероятность наступления события D, P(D) = {PD} >>>')
a_ver = f_a*a/PD
b_ver = f_b*b/PD
c_ver = f_c*c/PD
print(f'\n >>> Вероятность того, что студент учится на А: {a_ver:.4f} -> {a_ver*100:.2f}%\n'
      f' >>> Вероятность того, что студент учится на B: {b_ver:.4f} -> {b_ver*100:.2f}%\n')

#Задание 5
#Устройство состоит из трех деталей. Для первой детали вероятность выйти из строя в первый месяц равна 0.1, 
# для второй - 0.2, для третьей - 0.25. Какова вероятность того, что в первый месяц выйдут из строя: а). все детали б). 
# только две детали в). хотя бы одна деталь г). от одной до двух деталей?
p1 = 0.1
p2 = 0.2
p3 = 0.25
# а) Вероятность, что все детали выйдут из строя в первый месяц:
Pa = p1*p2*p3
print(
    f'>>> Вероятность, что из строя выйдут все детали = {Pa:.3f} -> {Pa*100:.2f}%')

# б) Вероятность, что в первый месяц выйдут из строя только две детали:
Pb = p1*p2*(1-p3)+p1*p3*(1-p2)+p2*p3*(1-p1)
print(
    f'>>> Вероятность того, что из строя выйдут только 2 детали = {Pb:.2f} -> {Pb*100:.2f}%')
# в) Вероятность того, что в первый месяц выйдет из строя хотя бы одна деталь:
Pv = 1-(1-p1)*(1-p2)*(1-p3)
print(
    f'>>> Вероятность того, что из строя выйдет хотя бы одна деталь = {Pv:.2f} -> {Pv*100:.2f}%')
# г) Вероятность того, что в первый месяц выйдут из строя от одной до двух деталей:
Pg = p1*(1-p2)*(1-p3)+p2*(1-p1)*(1-p3)+p3*(1-p1)*(1-p2)
print(
    f'>>> Вероятность того, что выйдут из строя от 1й до 2х деталей = {Pg+Pb:.3f} -> {Pg+Pb*100:.2f}%')